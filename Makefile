##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [4.5.0-RC5] date: [Wed May 07 22:54:30 ICT 2025] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = sample


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT =


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
	Core/main.c \
	Core/Startup/syscalls.c \
	Core/Startup/sysmem.c \
	Core/Startup/system_stm32f4xx.c \
	Core/Interrupt/stm32f4xx_it.c \
	Core/HAL/stm32f4xx_hal_init.c \
	Core/HAL/stm32f4xx_hal_timebase_tim.c \
	Third_Parties/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c \
	Third_Parties/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim_ex.c \
	Third_Parties/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_spi.c \
	Third_Parties/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c \
	Third_Parties/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c \
	Third_Parties/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.c \
	Third_Parties/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c \
	Third_Parties/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ramfunc.c \
	Third_Parties/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_gpio.c \
	Third_Parties/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma_ex.c \
	Third_Parties/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c \
	Third_Parties/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c \
	Third_Parties/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c \
	Third_Parties/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_exti.c \
	Third_Parties/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c \
	Third_Parties/FreeRTOS/croutine.c \
	Third_Parties/FreeRTOS/event_groups.c \
	Third_Parties/FreeRTOS/list.c \
	Third_Parties/FreeRTOS/queue.c \
	Third_Parties/FreeRTOS/stream_buffer.c \
	Third_Parties/FreeRTOS/tasks.c \
	Third_Parties/FreeRTOS/timers.c \
	Third_Parties/FreeRTOS/portable/GCC/ARM_CM4F/port.c \
	Third_Parties/FreeRTOS/portable/MemMang/heap_4.c \
	Middlewares/Scheduler/trigger.c \
	Middlewares/Display/mid_display.c \
	Middlewares/Data_Bank/databank.c \
	Drivers/Display/ILI9341/ili9341.c \
	Applications/LCD/layout_parser.c \
	Applications/LCD/layout_renderer.c \
	Applications/LCD/layout_control.c \
	Applications/LCD/Fonts/fonts.c \

# ASM sources
ASM_SOURCES =  \
startup_stm32f401xe.s

# ASM sources
ASMM_SOURCES = 

#Layout Info.o
LAYOUT_OBJ := $(abspath Applications/LCD/Tools/layout.o)

#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
FPU = -mfpu=fpv4-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32F401xE


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
	-ICore \
	-ICore/Startup \
	-ICore/Config \
	-ICore/HAL \
	-ICore/Interrupt \
	-IThird_Parties/STM32F4xx_HAL_Driver/Inc \
	-IThird_Parties/STM32F4xx_HAL_Driver/Inc/Legacy \
	-IThird_Parties/CMSIS/Device/ST/STM32F4xx/Include \
	-IThird_Parties/CMSIS/Include \
	-IThird_Parties/FreeRTOS/include \
	-IThird_Parties/FreeRTOS/portable/GCC/ARM_CM4F \
	-IMiddlewares/Scheduler \
	-IMiddlewares/Display \
	-IMiddlewares/Data_Bank \
	-IDrivers/Display \
	-IDrivers/Display/ILI9341 \
	-IApplications/LCD \
	-IApplications/LCD/Fonts

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = stm32f401retx_flash.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASMM_SOURCES:.S=.o)))
vpath %.S $(sort $(dir $(ASMM_SOURCES)))
OBJECTS += $(LAYOUT_OBJ)

CLEAN_OBJS := $(filter-out $(LAYOUT_OBJ), $(OBJECTS))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@
$(BUILD_DIR)/%.o: %.S Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR) $(CLEAN_OBJS)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

###
## CUSTOM COMMANDS
###

# Flash with J-Link
# Configure device name, everything else should remain the same
jflash: $(BUILD_DIR)/jflash
	JLink -commanderscript $<
# Change to yours
device = STM32F401RE
# First create a file with all commands
$(BUILD_DIR)/jflash: $(BUILD_DIR)/$(TARGET).bin
	@touch $@
	@echo device $(device) > $@
	@echo -e si 1'\n'speed 4000 >> $@
	@echo loadbin $< 0x8000000 >> $@
	@echo -e r'\n'g'\n'qc >> $@

# FLash with ST-LINK
stflash: $(BUILD_DIR)/$(TARGET).bin
	st-flash --reset write $< 0x8000000

# Flash with UART module
# If you have problem with flashing but it does connect,
# remove '-e 0' so that it will erase flash contents and
# flash firmware fresh
# uflash: $(BUILD_DIR)/$(TARGET).bin
# 	# This one is used if you have UART module with RTS and DTR pins
# 	stm32flash -b 115200 -e 0 -R -i rts,dtr,-rts:rts,-dtr,-rts -v -w $< $(PORT)
# 	# Else use this one and manualy set your MCU to bootloader mode
# 	#stm32flash -b 115200 -e 0 -v -w $< $(PORT)

# *** EOF ***
